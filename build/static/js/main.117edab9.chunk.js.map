{"version":3,"sources":["styles/styles.ts","components/NewItemForm.tsx","components/AddNewItem.tsx","FinItemByIndex.ts","AppStateContect.tsx","components/Card.tsx","components/UseFocus.ts","components/Column.tsx","App.tsx","index.tsx","sw.ts"],"names":["AppContainer","styled","div","ColumnContainer","ColumnTitle","CardContainer","NewItemButton","button","AddItemButton","props","dark","NewItemInput","input","red","NewItemFormContainer","NewItemForm","useState","text","setText","onChange","e","target","value","onClick","onAdd","AddNewItem","toggleButtonText","showForm","setShowForm","FindItemIndexById","items","id","findIndex","item","findDraggedTaskIndex","lists","Cid","Tindex","TaskIndex","tasks","task","console","log","AppStateContext","createContext","appStateReducer","state","action","type","uuid","payload","dragged","TargetIndex","taskId","push","drag","removeIndex","filter","toString","TargetCol","map","list","TargetObjectIndex","findObjectIDByDraggedProp","startCoulmn","IS","localStorage","getItem","JSON","parse","Initial_state","AppStateProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","UseAppState","useContext","hide","opacity","show","Card","hidden","handleDrag","DragEnd","DragOver","DragEnter","inpuRef","ref","useRef","current","focus","useFocus","style","draggable","onDragStart","onDragEnd","onDragOver","onDragEnter","onDrop","preventDefault","Column","index","tid","DragDrop","findIdByDraggedProp","key","setTimeout","App","className","i","ReactDOM","render","document","getElementById","navigator","serviceWorker","register","process","then","resp"],"mappings":"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","file":"static/js/main.117edab9.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const AppContainer = styled.div`\nalign-items: flex-start;\nbackground-color: #3179ba;\ndisplay: flex;\nflex-direction: row;\nheight: auto;\npadding: 20px;\nwidth: 100%;\n`\n\nexport const ColumnContainer = styled.div`\nbackground-color : green;\nwidth : 300px;\nmin-height : 40px;\npadding: 8px 8px;\nmargin-right: 20px;\nflex-grow : 0;\n`\n\nexport const ColumnTitle = styled.div`\npadding: 6px 16px 12px;\nfont-weight: bold;\n`\n\nexport const CardContainer = styled.div`\nbackground-color : #fff;\nmax-width: 300px;\npadding: 0.5rem 1rem;\nmargin-bottom: 0.5rem;\nborder-radius: 3px;\nbox-shadow:  #091e4240 0px 1px 0px 0px;\n`\n\nexport const NewItemButton = styled.button`\nbackground-color: #5aac44;\nborder-radius: 3px;\nborder: none;\nbox-shadow: none;\ncolor: #fff;\npadding: 6px 12px;\ntext-align: center;\n`\n\ninterface AddItemButtonProps {\n    dark? : boolean;\n}\n\nexport const AddItemButton = styled.button<AddItemButtonProps>`\nbackground-color: #ffffff3d;\nborder-radius: 3px;\nborder: none;\ncolor: ${props => (props.dark ? \"#000\" : \"#fff\")};\ncursor: pointer;\nmax-width: 300px;\npadding: 10px 12px;\ntext-align: left;\ntransition: background 85ms ease-in;\nwidth: 100%;\n&:hover {\nbackground-color: #ffffff52;\n}\n`\n\ninterface NewItemInputProps{\n    red? : boolean;\n}\n\nexport const NewItemInput = styled.input<NewItemInputProps>`\n/* background-color: ${(props) => (props.red ? 'red' : 'green')} ; */\nborder-radius: 3px;\nborder: none;\nbox-shadow: #091e4240 0px 1px 0px 0px;\nmargin-bottom: 0.5rem;\npadding: 0.5rem 1rem;\nwidth: 100%;\n`\n\nexport const NewItemFormContainer = styled.div`\nmax-width: 300px;\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\nalign-items: flex-start;\n`\n","import React, {useState} from 'react'\nimport { NewItemButton, NewItemInput, NewItemFormContainer} from '../styles/styles'\n\ninterface NewItemFormProps {\n    onAdd(text: string) : void\n}\n\nfunction NewItemForm(props :NewItemFormProps) {\nconst [text, setText] = useState('')\n  return (\n      <NewItemFormContainer>\n          <NewItemInput red = {true} onChange={(e) => (setText(e.target.value))} />\n          <NewItemButton onClick= {() => props.onAdd(text)} >\n              Create\n          </NewItemButton>\n      </NewItemFormContainer>\n  )\n}\n\nexport default NewItemForm\n","import React, {useState} from 'react'\nimport { AddItemButton } from '../styles/styles'\nimport NewItemForm from '../components/NewItemForm'\n\ninterface AddNewItemProps {\n    dark? : boolean;\n    toggleButtonText: string;\n    onAdd(text: string) : void;\n}\n\ninterface AddItemButtonProps {\n  dark? : boolean;\n}\n\nexport default function AddNewItem(props: AddNewItemProps) {\n    const {dark, toggleButtonText, onAdd} = props\n    const [showForm, setShowForm] = useState(false);\n\n  if(showForm){\n    return(\n      <NewItemForm onAdd = {(text)=> {\n        onAdd(text)\n        setShowForm(false)\n      } } />\n    )\n  }\n  return (\n    < AddItemButton dark = {dark} onClick = {() => setShowForm(true)}>\n    {toggleButtonText}\n    </AddItemButton>\n  )\n}","import {Task, List} from './type'\n\ninterface Item {\n    id : string\n}\n    \n\nexport const FindItemIndexById = <T extends Item> (items : T[], id: string) => {\n    return items.findIndex((item: T) => item.id === id)\n}\n\nexport const findIdByDraggedProp = (index: number, state: any) : string  => {\n    state.lists[index].tasks.map((task: Task) => {\n      if(task !== null) {\n        if (task.drag === false)\n        {\n          return task.id\n        } \n    }\n    return 'wrong'\n      })  \n  return 'wrong'\n  }\n\n  export const findObjectIDByDraggedProp = (lists: List[]) : number => {\n    let TaskIndex : number = -10\n      lists.map((list: any) => {\n      const Tindex = list.tasks?.findIndex((task: Task) => {\n        return task?.drag === true \n      } ) \n       if(Tindex > -1) {\n         TaskIndex = Tindex\n       }\n       return TaskIndex\n    }) \n     return TaskIndex\n  }\n\n  export const findDragStartCol = (lists : List[]) => {\n    return lists.findIndex((item) => {\n      return item.dragged === true})\n  }\n\n  export const findDraggedTaskIndex = (lists : List[], id : string, Cid: any) : number => {\n    let TaskIndex : number = -10\n    let Tindex : number\n    Tindex = lists[Cid].tasks.findIndex((task: Task) => {\n        return task?.id === id\n      }  ) \n\n      if(Tindex > -1) {\n         TaskIndex = Tindex\n       }\n       return TaskIndex\n    } ","import React, { createContext, useContext, useReducer, useEffect } from \"react\"\nimport {v1 as uuid} from \"uuid\"; \n\nimport { FindItemIndexById, findObjectIDByDraggedProp, \n    findDragStartCol, findDraggedTaskIndex } from './FinItemByIndex'\nimport {Action, Task,\n        AppState, AppStateContextProps} from './type'\n\n  \n\nconst appData: AppState = {\n    \n    lists: [\n    {\n    id: \"0\",\n    text: \"To Do\",\n    dragged: false,\n    tasks: [{ id: \"c0\", text: \"Generate app scaffold\", drag:false }]\n    },\n    {\n    id: \"1\",\n    text: \"In Progress\",\n    dragged: false,\n    tasks: [{ id: \"c1\", text: \"Learn Typescript\", drag:false }]\n    },\n    {\n    id: \"2\",\n    text: \"Done\",\n    dragged: false,\n    tasks: [{ id: \"c3\", text: \"Begin to use static typing\", drag:false }]\n    }\n    ]\n}\n\nconsole.log()\n\n\n\n\n\n    const AppStateContext = createContext<AppStateContextProps>({} as AppStateContextProps)\n\n   \n      \n    const appStateReducer = (state : AppState, action : Action) : AppState => {\n        switch(action.type){\n            case \"ADD_LIST\": {\n                return{\n                    ...state,\n                    lists : [\n                        ...state.lists, {id : uuid(), text: action.payload, dragged: false, tasks:[]}\n                    ]\n                    \n                }\n            }\n            case \"ADD_TASK\" : {\n                const TargetIndex = FindItemIndexById(state.lists, action.payload.taskId)\n                state.lists[TargetIndex].tasks.push({\n                    id: uuid(),\n                    text: action.payload.text,\n                    drag:false \n                })\n                return{\n                    ...state\n                }\n            }\n            case \"REMOVE_TASK\" : {\n                const removeIndex = FindItemIndexById(state.lists, action.payload.taskId)\n                state.lists.filter(item => item.id !== removeIndex.toString() )\n                return{\n                    ...state\n                }\n            }\n            case \"DRAGGED_TASK\" : {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n       \n                const TaskIndex = \n                findDraggedTaskIndex(state.lists, action.payload.taskId, action.payload.Cid)\n                state.lists[TargetCol].dragged = true\n                state.lists[TargetCol].tasks[TaskIndex].drag = true \n                return{\n                    ...state\n                }\n                }\n            case \"DRAGGED_TASK_END\" : {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n                const TaskIndex = \n                findDraggedTaskIndex(state.lists, action.payload.taskId, action.payload.Cid)\n                state.lists.map(list => {if(list.dragged===true) \n                    { list.dragged = false} \n                return {...state}} )\n                state.lists[TargetCol].tasks[TaskIndex].drag = false\n                return{\n                    ...state\n                }\n            }\n            \n            case \"DROP\": {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n                const TargetObjectIndex = findObjectIDByDraggedProp(state.lists)\n                const startCoulmn = findDragStartCol(state.lists)\n                if(TargetCol !== startCoulmn)\n                {\n                    state.lists[TargetCol].tasks.push(state.lists[startCoulmn].tasks[TargetObjectIndex])\n                state.lists.map(list => {\n                    list.dragged = false\n                    list.tasks.map((task : Task) => {\n                        if(task !== null){\n                            task.drag = false\n                        }\n                    return{...state}})\n                    return{...state}\n                })\n                delete state.lists[startCoulmn].tasks[TargetObjectIndex]\n                }\n                \n                return{\n                    ...state\n                }\n            }\n            }\n        }                           \n\n    const IS = localStorage.getItem('list') as string \n    console.log(\"LIST IS\", JSON.parse(IS))\n    const Initial_state = JSON.parse(IS) ?? appData\n    export const AppStateProvider = ({children} : React.PropsWithChildren<{}>) => {\n        const [state, dispatch] = useReducer(appStateReducer, Initial_state)\n        useEffect(() => localStorage.setItem('list',JSON.stringify(state)),[state])\n            return(\n                <AppStateContext.Provider value = {{state, dispatch}}>\n                    {children}\n                </AppStateContext.Provider>\n            )\n        }\n\n    export const UseAppState = () => {\n        return useContext(AppStateContext)\n    }","import React from 'react'\nimport {CardContainer} from '../styles/styles'\nimport { useFocus } from './UseFocus'\n\n\n\n\nconst hide = {\n  opacity: '0'\n}\nconst show = {\n  opacity: '1'\n}\n\ninterface CardProps {\n    text : string\n    hidden: boolean\n    handleDrag() : void\n    DragEnd() : void\n    DragEnter(e: React.DragEvent) : void\n    DragOver(e: React.DragEvent) : void\n    DragDrop(e: React.DragEvent) : void\n    \n}\n\nfunction Card({text,  hidden, handleDrag, DragEnd, DragOver,  DragEnter}: CardProps ) {\n  const inpuRef = useFocus()\n  \n  const handle = () => {\n    handleDrag()\n    }\n  \n  \n  return (\n    <CardContainer style = {hidden? hide:show} \n    draggable= {true}\n    ref={inpuRef} \n    onDragStart={() => handle()}\n    onDragEnd = {() => DragEnd()}\n    onDragOver ={(e) => DragOver(e)} \n    onDragEnter = {(e) => DragEnter(e)} \n    onDrop = {(e) => e.preventDefault()} >\n        {text}\n    </CardContainer>\n  )\n}\n\nexport default Card\n","import { useRef, useEffect } from \"react\"\nexport const useFocus = () => {\nconst ref = useRef<HTMLInputElement>(null)\nuseEffect(() => {\nref.current?.focus()\n})\nreturn ref\n}\n","import React, { PropsWithChildren } from 'react'\nimport {ColumnContainer, ColumnTitle} from '../styles/styles'\nimport AddNewItem from '../components/AddNewItem'\nimport { UseAppState } from '../AppStateContect'\nimport Card from './Card'\nimport {findIdByDraggedProp} from '../FinItemByIndex'\n\n\ninterface ColumnProps {\n    text : string \n    index : number\n    id: string\n}\n\nexport default function Column({text, index, id} : PropsWithChildren<ColumnProps>) {\n  \n  const {state, dispatch} = UseAppState()\n\n  const handle = (tid: string) => {\n    setTimeout(() => dispatch({type:\"DRAGGED_TASK\", payload:{Cid: id, taskId: tid} }),\n      0\n    )\n  }\n  const DragEnd = (tid: string) => {\n    setTimeout(() => dispatch({type:\"DRAGGED_TASK_END\", payload:{Cid: id, taskId: tid} }),\n      0\n    )\n  }\n  const DragDrop = (e:React.DragEvent,  Cid: string, tid: string ) => {\n    dispatch({type:\"DROP\", payload:{e ,Cid: id, taskId: tid} })\n  }\n\n\n  \n  return (\n    <ColumnContainer  \n    onDrop = {(e) => DragDrop(e, id, findIdByDraggedProp(index, state))} \n    onDragOver = {(e) => e.preventDefault() }\n    onDragEnter= {(e) => e.preventDefault()} >\n    <ColumnTitle> {text} </ColumnTitle>\n    {state.lists[index].tasks.map((task) => {\n      if(task !== null){\n        return <Card text = {task?.text}  \n      key = {task.id}\n      hidden = {task.drag}\n      handleDrag = {() => handle(task.id)}\n      DragEnd = {() => DragEnd(task.id)} \n      DragOver = {(e) => e.preventDefault() }\n      DragEnter= {(e) => e.preventDefault()} \n      DragDrop = {(e) => e.preventDefault()}\n     />\n    }\n    return(null)\n      })\n      }\n    <AddNewItem dark toggleButtonText= \"+ Add another task\" \n    onAdd= {\n      (text) => {dispatch({type:\"ADD_TASK\", payload:{text, taskId: id}})\n    }\n    } />\n    </ColumnContainer>\n  )\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Column from \"./components/Column\";\nimport { AppContainer } from \"./styles/styles\";\nimport AddNewItem  from './components/AddNewItem'\nimport { UseAppState } from './AppStateContect'\n\n\n\n\n\nconst App = () => {\n\n \n    const {state, dispatch}  = UseAppState()\n\n  return (\n    <div className=\"App\">\n      <AppContainer>\n        {\n          state.lists.map((list : any, i: number) => (\n            <Column id={list.id} text= {list.text} key = {list.id} index = {i}  />\n            ))\n        }\n        <AddNewItem toggleButtonText={'create new list'} onAdd={text => dispatch({ type: \"ADD_LIST\", payload:  text })}\n/>\n      </AppContainer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { AppStateProvider } from './AppStateContect'\nimport { sw } from './sw';\n\nReactDOM.render(\n  <AppStateProvider>\n    <App />\n    </AppStateProvider>\n   ,\n  document.getElementById('root')\n);\nsw()\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","export const sw = () => {\n    console.log('Registering Now')\n    navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/serviceworker.js`)\n    .then((resp) => console.log('Reponse', resp))\n}"],"sourceRoot":""}