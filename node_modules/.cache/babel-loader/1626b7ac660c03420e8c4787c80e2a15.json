{"ast":null,"code":"export const FindItemIndexById = (items, id) => {\n  return items.findIndex(item => item.id === id);\n};\nexport const findIdByDraggedProp = (index, state) => {\n  state.lists[index].tasks.map(task => {\n    if (task.drag === false) {\n      return task.id;\n    }\n  });\n  return 'd';\n};\nexport const findObjectIDByDraggedProp = lists => {\n  let index;\n  index = lists.findIndex(list => {\n    console.log('list is', list.tasks);\n    return list.tasks.find(task => task.drag === true);\n  });\n  return index;\n};","map":{"version":3,"sources":["/home/khan/Desktop/Self Programming/typescript/practice/src/FinItemByIndex.ts"],"names":["FindItemIndexById","items","id","findIndex","item","findIdByDraggedProp","index","state","lists","tasks","map","task","drag","findObjectIDByDraggedProp","list","console","log","find"],"mappings":"AAaA,OAAO,MAAMA,iBAAiB,GAAG,CAAkBC,KAAlB,EAA+BC,EAA/B,KAA8C;AAC3E,SAAOD,KAAK,CAACE,SAAN,CAAiBC,IAAD,IAAaA,IAAI,CAACF,EAAL,KAAYA,EAAzC,CAAP;AACH,CAFM;AAIP,OAAO,MAAMG,mBAAmB,GAAG,CAACC,KAAD,EAAgBC,KAAhB,KAAyC;AACxEA,EAAAA,KAAK,CAACC,KAAN,CAAYF,KAAZ,EAAmBG,KAAnB,CAAyBC,GAAzB,CAA8BC,IAAD,IAAgB;AAC3C,QAAIA,IAAI,CAACC,IAAL,KAAc,KAAlB,EACA;AACE,aAAOD,IAAI,CAACT,EAAZ;AACD;AACJ,GALC;AAMF,SAAO,GAAP;AACC,CARI;AAUL,OAAO,MAAMW,yBAAyB,GAAIL,KAAD,IAAyB;AAChE,MAAIF,KAAJ;AACEA,EAAAA,KAAK,GAAGE,KAAK,CAACL,SAAN,CAAiBW,IAAD,IAAe;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAI,CAACL,KAA5B;AACA,WAAOK,IAAI,CAACL,KAAL,CAAWQ,IAAX,CAAiBN,IAAD,IAAgBA,IAAI,CAACC,IAAL,KAAc,IAA9C,CAAP;AACD,GAHS,CAAR;AAID,SAAON,KAAP;AACF,CAPM","sourcesContent":["\n\ninterface Item {\n    id : string\n}\n\ninterface Task {\n    id : string\n    text: string\n    drag: boolean\n}\n    \n\nexport const FindItemIndexById = <T extends Item> (items : T[], id: string) => {\n    return items.findIndex((item: T) => item.id === id)\n}\n\nexport const findIdByDraggedProp = (index: number, state: any) : string  => {\n    state.lists[index].tasks.map((task: Task) => {\n      if (task.drag === false)\n      {\n        return task.id\n      }  \n  })\n  return 'd'\n  }\n\n  export const findObjectIDByDraggedProp = (lists: any) : number => {\n    let index : number\n      index = lists.findIndex((list: any) => {\n      console.log('list is', list.tasks)\n      return list.tasks.find((task: Task) => task.drag === true ) \n    }) \n     return index\n  }"]},"metadata":{},"sourceType":"module"}