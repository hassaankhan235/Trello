{"ast":null,"code":"var _jsxFileName = \"/home/khan/Desktop/Self Programming/typescript/practice/src/AppStateContect.tsx\";\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { FindItemIndexById, findObjectIDByDraggedProp, findDragStartCol } from './FinItemByIndex';\nimport { v1 as uuid } from \"uuid\";\nconst appData = {\n  lists: [{\n    id: \"0\",\n    text: \"To Do\",\n    dragged: false,\n    tasks: [{\n      id: \"c0\",\n      text: \"Generate app scaffold\",\n      drag: false\n    }]\n  }, {\n    id: \"1\",\n    text: \"In Progress\",\n    dragged: false,\n    tasks: [{\n      id: \"c1\",\n      text: \"Learn Typescript\",\n      drag: false\n    }]\n  }, {\n    id: \"2\",\n    text: \"Done\",\n    dragged: false,\n    tasks: [{\n      id: \"c3\",\n      text: \"Begin to use static typing\",\n      drag: false\n    }]\n  }]\n};\nconst AppStateContext = createContext({});\n\nconst appStateReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\":\n      {\n        return { ...state,\n          lists: [...state.lists, {\n            id: uuid(),\n            text: action.payload,\n            dragged: false,\n            tasks: []\n          }]\n        };\n      }\n\n    case \"ADD_TASK\":\n      {\n        const TargetIndex = FindItemIndexById(state.lists, action.payload.taskId);\n        state.lists[TargetIndex].tasks.push({\n          id: uuid(),\n          text: action.payload.text,\n          drag: false\n        });\n        return { ...state\n        };\n      }\n\n    case \"REMOVE_TASK\":\n      {\n        const removeIndex = FindItemIndexById(state.lists, action.payload.taskId);\n        state.lists.filter(item => item.id !== removeIndex.toString());\n        return { ...state\n        };\n      }\n\n    case \"DRAGGED_TASK\":\n      {\n        const TargetCol = FindItemIndexById(state.lists, action.payload.Cid);\n        state.lists[TargetCol].dragged = true;\n        state.lists[TargetCol].tasks[0].drag = true;\n        return { ...state\n        };\n      }\n\n    case \"DRAGGED_TASK_END\":\n      {\n        const TargetCol = FindItemIndexById(state.lists, action.payload.Cid);\n        state.lists[TargetCol].dragged = false;\n        state.lists[TargetCol].tasks[0].drag = false;\n        return { ...state\n        };\n      }\n\n    case \"DROP\":\n      {\n        let res = 0;\n        const TargetCol = FindItemIndexById(state.lists, action.payload.Cid);\n        const TargetObjectId = findObjectIDByDraggedProp(state.lists);\n        const startCoulmn = findDragStartCol(state.lists);\n        console.log(\"FINALLY FINALLY FINALLY \", TargetObjectId);\n        state.lists[TargetCol].tasks.push(state.lists[startCoulmn].tasks[TargetObjectId]);\n        return { ...state\n        };\n      }\n  }\n};\n\nexport const AppStateProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(appStateReducer, appData);\n  return /*#__PURE__*/React.createElement(AppStateContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, children);\n};\nexport const UseAppState = () => {\n  return useContext(AppStateContext);\n};","map":{"version":3,"sources":["/home/khan/Desktop/Self Programming/typescript/practice/src/AppStateContect.tsx"],"names":["React","createContext","useContext","useReducer","FindItemIndexById","findObjectIDByDraggedProp","findDragStartCol","v1","uuid","appData","lists","id","text","dragged","tasks","drag","AppStateContext","appStateReducer","state","action","type","payload","TargetIndex","taskId","push","removeIndex","filter","item","toString","TargetCol","Cid","res","TargetObjectId","startCoulmn","console","log","AppStateProvider","children","dispatch","UseAppState"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\"\nimport { FindItemIndexById, findObjectIDByDraggedProp, findDragStartCol } from './FinItemByIndex'\nimport { type } from \"os\"\nimport {v1 as uuid} from \"uuid\"; \nimport { DragItem } from './DragItem'\n\nconst appData: AppState = {\n    lists: [\n    {\n    id: \"0\",\n    text: \"To Do\",\n    dragged: false,\n    tasks: [{ id: \"c0\", text: \"Generate app scaffold\", drag:false }]\n    },\n    {\n    id: \"1\",\n    text: \"In Progress\",\n    dragged: false,\n    tasks: [{ id: \"c1\", text: \"Learn Typescript\", drag:false }]\n    },\n    {\n    id: \"2\",\n    text: \"Done\",\n    dragged: false,\n    tasks: [{ id: \"c3\", text: \"Begin to use static typing\", drag:false }]\n    }\n    ]\n    }\n    \n    interface Task {\n        id : string\n        text: string\n        drag: boolean\n    }\n\n    interface List {\n        id : string\n        text : string\n        dragged: boolean\n        tasks : Task[]\n    }\n    interface AppState {\n        lists : List[]\n    }\n\n    interface AppStateContextProps {\n        state : AppState\n        dispatch : React.Dispatch<Action>\n    }\n\n    const AppStateContext = createContext<AppStateContextProps>({} as AppStateContextProps)\n\n    type Action = \n        | {\n            type: 'ADD_LIST'\n            payload: string\n        }\n        | {\n            type: \"ADD_TASK\"\n            payload: {text: string; taskId: string}\n        }\n        | {\n            type: \"REMOVE_TASK\"\n            payload: {text:string; taskId: string}\n        }\n        | {\n            type: \"DRAGGED_TASK\"\n            payload: {Cid: string ,taskId: string}\n        }\n        | {\n            type: \"DRAGGED_TASK_END\"\n            payload: {Cid: string ,taskId: string}\n        }\n        | {\n            type: \"DROP\"\n            payload: {Cid: string, taskId: string, e: React.DragEvent}\n        }\n      \n       \n   \n        const appStateReducer = (state : AppState, action : Action) : AppState => {\n        switch(action.type){\n            case \"ADD_LIST\": {\n                return{\n                    ...state,\n                    lists : [\n                        ...state.lists, {id : uuid(), text: action.payload, dragged: false, tasks:[]}\n                    ]\n                    \n                }\n            }\n            case \"ADD_TASK\" : {\n                const TargetIndex = FindItemIndexById(state.lists, action.payload.taskId)\n                state.lists[TargetIndex].tasks.push({\n                    id: uuid(),\n                    text: action.payload.text,\n                    drag:false \n                })\n                return{\n                    ...state\n                }\n            }\n            case \"REMOVE_TASK\" : {\n                const removeIndex = FindItemIndexById(state.lists, action.payload.taskId)\n                state.lists.filter(item => item.id !== removeIndex.toString() )\n                return{\n                    ...state\n                }\n            }\n            case \"DRAGGED_TASK\" : {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n                state.lists[TargetCol].dragged = true\n                state.lists[TargetCol].tasks[0].drag = true \n                return{\n                    ...state\n                }\n                }\n            case \"DRAGGED_TASK_END\" : {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n                state.lists[TargetCol].dragged = false\n                state.lists[TargetCol].tasks[0].drag = false \n                return{\n                    ...state\n                }\n            }\n            \n            case \"DROP\": {\n                let res = 0\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n                const TargetObjectId = findObjectIDByDraggedProp(state.lists)\n                const startCoulmn = findDragStartCol(state.lists)\n                console.log(\"FINALLY FINALLY FINALLY \",TargetObjectId)\n                state.lists[TargetCol].tasks.push(state.lists[startCoulmn].tasks[TargetObjectId])\n                \n                return{\n                    ...state\n                }\n            }\n            }\n        }                           \n\n\n    export const AppStateProvider = ({children} : React.PropsWithChildren<{}>) => {\n        const [state, dispatch] = useReducer(appStateReducer, appData)\n            return(\n                <AppStateContext.Provider value = {{state, dispatch}}>\n                    {children}\n                </AppStateContext.Provider>\n            )\n        }\n\n    export const UseAppState = () => {\n        return useContext(AppStateContext)\n    }"]},"metadata":{},"sourceType":"module"}