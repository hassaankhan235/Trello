{"ast":null,"code":"import _slicedToArray from\"/home/khan/Desktop/Self Programming/typescript/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/home/khan/Desktop/Self Programming/typescript/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/khan/Desktop/Self Programming/typescript/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _JSON$parse;import React,{createContext,useContext,useReducer,useEffect}from\"react\";import{v1 as uuid}from\"uuid\";import{FindItemIndexById,findObjectIDByDraggedProp,findDragStartCol,findDraggedTaskIndex}from'./FinItemByIndex';var appData={lists:[{id:\"0\",text:\"To Do\",dragged:false,tasks:[{id:\"c0\",text:\"Generate app scaffold\",drag:false}]},{id:\"1\",text:\"In Progress\",dragged:false,tasks:[{id:\"c1\",text:\"Learn Typescript\",drag:false}]},{id:\"2\",text:\"Done\",dragged:false,tasks:[{id:\"c3\",text:\"Begin to use static typing\",drag:false}]}]};console.log();var AppStateContext=createContext({});var appStateReducer=function appStateReducer(state,action){switch(action.type){case\"ADD_LIST\":{return _objectSpread(_objectSpread({},state),{},{lists:[].concat(_toConsumableArray(state.lists),[{id:uuid(),text:action.payload,dragged:false,tasks:[]}])});}case\"ADD_TASK\":{var TargetIndex=FindItemIndexById(state.lists,action.payload.taskId);state.lists[TargetIndex].tasks.push({id:uuid(),text:action.payload.text,drag:false});return _objectSpread({},state);}case\"REMOVE_TASK\":{var removeIndex=FindItemIndexById(state.lists,action.payload.taskId);state.lists.filter(function(item){return item.id!==removeIndex.toString();});return _objectSpread({},state);}case\"DRAGGED_TASK\":{var TargetCol=FindItemIndexById(state.lists,action.payload.Cid);var TaskIndex=findDraggedTaskIndex(state.lists,action.payload.taskId,action.payload.Cid);state.lists[TargetCol].dragged=true;state.lists[TargetCol].tasks[TaskIndex].drag=true;return _objectSpread({},state);}case\"DRAGGED_TASK_END\":{var _TargetCol=FindItemIndexById(state.lists,action.payload.Cid);var _TaskIndex=findDraggedTaskIndex(state.lists,action.payload.taskId,action.payload.Cid);state.lists.map(function(list){if(list.dragged===true){list.dragged=false;}return _objectSpread({},state);});state.lists[_TargetCol].tasks[_TaskIndex].drag=false;return _objectSpread({},state);}case\"DROP\":{var _TargetCol2=FindItemIndexById(state.lists,action.payload.Cid);var TargetObjectIndex=findObjectIDByDraggedProp(state.lists);var startCoulmn=findDragStartCol(state.lists);if(_TargetCol2!==startCoulmn){state.lists[_TargetCol2].tasks.push(state.lists[startCoulmn].tasks[TargetObjectIndex]);state.lists.map(function(list){list.dragged=false;list.tasks.map(function(task){if(task!==null){task.drag=false;}return _objectSpread({},state);});return _objectSpread({},state);});delete state.lists[startCoulmn].tasks[TargetObjectIndex];}return _objectSpread({},state);}}};var IS=localStorage.getItem('list');console.log(\"LIST IS\",JSON.parse(IS));var Initial_state=(_JSON$parse=JSON.parse(IS))!==null&&_JSON$parse!==void 0?_JSON$parse:appData;export var AppStateProvider=function AppStateProvider(_ref){var children=_ref.children;var _useReducer=useReducer(appStateReducer,Initial_state),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){return localStorage.setItem('list',JSON.stringify(state));},[state]);return/*#__PURE__*/React.createElement(AppStateContext.Provider,{value:{state:state,dispatch:dispatch}},children);};export var UseAppState=function UseAppState(){return useContext(AppStateContext);};","map":{"version":3,"sources":["/home/khan/Desktop/Self Programming/typescript/practice/src/AppStateContect.tsx"],"names":["React","createContext","useContext","useReducer","useEffect","v1","uuid","FindItemIndexById","findObjectIDByDraggedProp","findDragStartCol","findDraggedTaskIndex","appData","lists","id","text","dragged","tasks","drag","console","log","AppStateContext","appStateReducer","state","action","type","payload","TargetIndex","taskId","push","removeIndex","filter","item","toString","TargetCol","Cid","TaskIndex","map","list","TargetObjectIndex","startCoulmn","task","IS","localStorage","getItem","JSON","parse","Initial_state","AppStateProvider","children","dispatch","setItem","stringify","UseAppState"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\"\nimport {v1 as uuid} from \"uuid\"; \n\nimport { FindItemIndexById, findObjectIDByDraggedProp, \n    findDragStartCol, findDraggedTaskIndex } from './FinItemByIndex'\nimport {Action, Task,\n        AppState, AppStateContextProps} from './type'\n\n  \n\nconst appData: AppState = {\n    \n    lists: [\n    {\n    id: \"0\",\n    text: \"To Do\",\n    dragged: false,\n    tasks: [{ id: \"c0\", text: \"Generate app scaffold\", drag:false }]\n    },\n    {\n    id: \"1\",\n    text: \"In Progress\",\n    dragged: false,\n    tasks: [{ id: \"c1\", text: \"Learn Typescript\", drag:false }]\n    },\n    {\n    id: \"2\",\n    text: \"Done\",\n    dragged: false,\n    tasks: [{ id: \"c3\", text: \"Begin to use static typing\", drag:false }]\n    }\n    ]\n}\n\nconsole.log()\n\n\n\n\n\n    const AppStateContext = createContext<AppStateContextProps>({} as AppStateContextProps)\n\n   \n      \n    const appStateReducer = (state : AppState, action : Action) : AppState => {\n        switch(action.type){\n            case \"ADD_LIST\": {\n                return{\n                    ...state,\n                    lists : [\n                        ...state.lists, {id : uuid(), text: action.payload, dragged: false, tasks:[]}\n                    ]\n                    \n                }\n            }\n            case \"ADD_TASK\" : {\n                const TargetIndex = FindItemIndexById(state.lists, action.payload.taskId)\n                state.lists[TargetIndex].tasks.push({\n                    id: uuid(),\n                    text: action.payload.text,\n                    drag:false \n                })\n                return{\n                    ...state\n                }\n            }\n            case \"REMOVE_TASK\" : {\n                const removeIndex = FindItemIndexById(state.lists, action.payload.taskId)\n                state.lists.filter(item => item.id !== removeIndex.toString() )\n                return{\n                    ...state\n                }\n            }\n            case \"DRAGGED_TASK\" : {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n       \n                const TaskIndex = \n                findDraggedTaskIndex(state.lists, action.payload.taskId, action.payload.Cid)\n                state.lists[TargetCol].dragged = true\n                state.lists[TargetCol].tasks[TaskIndex].drag = true \n                return{\n                    ...state\n                }\n                }\n            case \"DRAGGED_TASK_END\" : {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n                const TaskIndex = \n                findDraggedTaskIndex(state.lists, action.payload.taskId, action.payload.Cid)\n                state.lists.map(list => {if(list.dragged===true) \n                    { list.dragged = false} \n                return {...state}} )\n                state.lists[TargetCol].tasks[TaskIndex].drag = false\n                return{\n                    ...state\n                }\n            }\n            \n            case \"DROP\": {\n                const TargetCol = FindItemIndexById(state.lists, action.payload.Cid)\n                const TargetObjectIndex = findObjectIDByDraggedProp(state.lists)\n                const startCoulmn = findDragStartCol(state.lists)\n                if(TargetCol !== startCoulmn)\n                {\n                    state.lists[TargetCol].tasks.push(state.lists[startCoulmn].tasks[TargetObjectIndex])\n                state.lists.map(list => {\n                    list.dragged = false\n                    list.tasks.map((task : Task) => {\n                        if(task !== null){\n                            task.drag = false\n                        }\n                    return{...state}})\n                    return{...state}\n                })\n                delete state.lists[startCoulmn].tasks[TargetObjectIndex]\n                }\n                \n                return{\n                    ...state\n                }\n            }\n            }\n        }                           \n\n    const IS = localStorage.getItem('list') as string \n    console.log(\"LIST IS\", JSON.parse(IS))\n    const Initial_state = JSON.parse(IS) ?? appData\n    export const AppStateProvider = ({children} : React.PropsWithChildren<{}>) => {\n        const [state, dispatch] = useReducer(appStateReducer, Initial_state)\n        useEffect(() => localStorage.setItem('list',JSON.stringify(state)),[state])\n            return(\n                <AppStateContext.Provider value = {{state, dispatch}}>\n                    {children}\n                </AppStateContext.Provider>\n            )\n        }\n\n    export const UseAppState = () => {\n        return useContext(AppStateContext)\n    }"]},"metadata":{},"sourceType":"module"}