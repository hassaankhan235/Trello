{"ast":null,"code":"var _jsxFileName = \"/home/khan/Desktop/Self Programming/typescript/practice/src/components/Column.tsx\";\nimport React from 'react';\nimport { ColumnContainer, ColumnTitle } from '../styles/styles';\nimport AddNewItem from '../components/AddNewItem';\nimport { UseAppState } from '../AppStateContect';\nimport Card from './Card';\nexport default function Column({\n  text,\n  index,\n  id,\n  hidden\n}) {\n  const handle = tid => {\n    console.log('DRAGGING');\n    dispatch({\n      type: \"DRAGGED_TASK\",\n      payload: {\n        taskId: tid\n      }\n    });\n    console.log('hidden', hidden, tid);\n  };\n\n  const {\n    state,\n    dispatch\n  } = UseAppState();\n  return /*#__PURE__*/React.createElement(ColumnContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ColumnTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \" \", text, \" \"), state.lists[index].tasks.map(task => {\n    return /*#__PURE__*/React.createElement(Card, {\n      text: task.text,\n      hidden: hidden,\n      handleDrag: () => handle(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }\n    });\n  }), /*#__PURE__*/React.createElement(AddNewItem, {\n    dark: true,\n    toggleButtonText: \"+ Add another task\",\n    onAdd: text => {\n      dispatch({\n        type: \"ADD_TASK\",\n        payload: {\n          text,\n          taskId: id\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/home/khan/Desktop/Self Programming/typescript/practice/src/components/Column.tsx"],"names":["React","ColumnContainer","ColumnTitle","AddNewItem","UseAppState","Card","Column","text","index","id","hidden","handle","tid","console","log","dispatch","type","payload","taskId","state","lists","tasks","map","task"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,kBAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAWA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,EAAd;AAAkBC,EAAAA;AAAlB,CAAhB,EAA4E;AAEzF,QAAMC,MAAM,GAAIC,GAAD,IAAiB;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,cAAN;AAAsBC,MAAAA,OAAO,EAAC;AAACC,QAAAA,MAAM,EAAEN;AAAT;AAA9B,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBJ,MAArB,EAA6BE,GAA7B;AACD,GAJD;;AAKA,QAAM;AAACO,IAAAA,KAAD;AAAQJ,IAAAA;AAAR,MAAoBX,WAAW,EAArC;AACA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAeG,IAAf,MADA,EAECY,KAAK,CAACC,KAAN,CAAYZ,KAAZ,EAAmBa,KAAnB,CAAyBC,GAAzB,CAA8BC,IAAD,IAAU;AACtC,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAIA,IAAI,CAAChB,IAAnB;AACP,MAAA,MAAM,EAAIG,MADH;AAEP,MAAA,UAAU,EAAI,MAAMC,MAAM,CAACY,IAAI,CAACd,EAAN,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGD,GAJA,CAFD,eAOA,oBAAC,UAAD;AAAY,IAAA,IAAI,MAAhB;AAAiB,IAAA,gBAAgB,EAAE,oBAAnC;AACA,IAAA,KAAK,EACFF,IAAD,IAAU;AAACQ,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAC,UAAN;AAAkBC,QAAAA,OAAO,EAAC;AAACV,UAAAA,IAAD;AAAOW,UAAAA,MAAM,EAAET;AAAf;AAA1B,OAAD,CAAR;AACZ,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADF;AAeD","sourcesContent":["import React, { PropsWithChildren } from 'react'\nimport {ColumnContainer, ColumnTitle} from '../styles/styles'\nimport AddNewItem from '../components/AddNewItem'\nimport { UseAppState } from '../AppStateContect'\nimport Card from './Card'\nimport {v1 as uuid} from 'uuid'\n\n\ninterface ColumnProps {\n    text : string \n    index : number\n    id: string\n    hidden: boolean\n}\n\nexport default function Column({text, index, id, hidden} : PropsWithChildren<ColumnProps>) {\n  \n  const handle = (tid: string) => {\n    console.log('DRAGGING')\n    dispatch({type:\"DRAGGED_TASK\", payload:{taskId: tid} })\n    console.log('hidden',hidden, tid)\n  }\n  const {state, dispatch} = UseAppState()\n  return (\n    <ColumnContainer  >\n    <ColumnTitle> {text} </ColumnTitle>\n    {state.lists[index].tasks.map((task) => {\n      return <Card text = {task.text}  \n      hidden = {hidden}\n      handleDrag = {() => handle(task.id)}/>\n    })}\n    <AddNewItem dark toggleButtonText= \"+ Add another task\" \n    onAdd= {\n      (text) => {dispatch({type:\"ADD_TASK\", payload:{text, taskId: id}})\n    }\n    } />\n    </ColumnContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}